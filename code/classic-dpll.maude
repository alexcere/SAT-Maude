***
*** Classic DPLL inference rules.
*** Taken directly from 
*** Solving SAT and SAT Modulo Theories: from an
*** Abstract Davis-Putnam-Logemann-Loveland
*** Procedure to DPLL(T)
***

sload logic.maude

mod CLASSIC-DPLL is protecting LOGIC .

	var p : Qid .
	var l u : Literal .
	var M N : Context .
	var C D : Clause .
	var F : ClauseSet .

	
	crl [UnitPropagate] : M || (l \/ C), F => M l || (l \/ C), F
		if M |= C = false /\ definedLiteral(l, M) = false .

	crl [PureLiteral] : M || (l \/ C), F => M l || (l \/ C), F 
		if (~(l) in F) = false /\ definedLiteral(l,M) = false .
 
	crl [Decide] : M || (l \/ C),F => M d(l) || (l \/ C),F 
		if definedLiteral(l,M) = false .

	crl [Fail] : M || F,C => failState if M |= C = false
		/\ existsDecisionLiteral(M) = false .

	crl [Backtrack] : M d(l) N || F,C => M ~(l) || F,C if
	    M d(l) N |= C = false /\
		existsDecisionLiteral(N) = false .

endm